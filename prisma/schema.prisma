// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  firstName     String?
  lastName      String?
  address       String?
  phone         String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  orders        Order[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Restaurant {
  id       Int                     @id @default(autoincrement())
  name     String
  address  String
  kitchens KitchensToRestaurants[]
  img      String
  menu     Menu[]
}

model Kitchen {
  name        String                  @unique
  restaurants KitchensToRestaurants[]
}

model KitchensToRestaurants {
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  kitchen      Kitchen    @relation(fields: [kitchenName], references: [name])
  kitchenName  String

  @@id([restaurantId, kitchenName])
}

model Menu {
  id           Int        @id @default(autoincrement())
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  menuItems    MenuItem[]
}

model MenuItem {
  id        String      @id @default(cuid())
  name      String
  price     Float
  img       String
  menu      Menu        @relation(fields: [menuId], references: [id])
  OrderItem OrderItem[]
  menuId    Int
}

model Order {
  id         Int         @id @default(autoincrement())
  orderItems OrderItem[]
  user       User        @relation(fields: [userId], references: [id])
  userId     String      @unique
}

model OrderItem {
  id         String   @id @default(cuid())
  quantity   Int
  price      Float
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId String
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    Int
}
